#!/usr/bin/env python3

'''fix_topturnier: Fix the HTML output generated by TopTurnier.'''

__copyright__ = '''\
Copyright (C) 2017  Volker Diels-Grabsch <v@njh.eu>

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
'''

from os import walk
from os.path import join
from re import sub
from sys import argv, stderr

def fix_html(old_data):
    html = old_data.decode('utf-8')
    html = html.replace(
        '<div class="erimgdiv"><img src="endrunde.jpg" width=600 class="erimg"></div>',
        '<!-- Removed "erimgdiv" -->',
    )
    html = html.replace(
        '$.get("endrunde.jpg").done(function() { $(".erimgdiv").css("display", "block"); }).fail(function() { $(".erimgdiv").css("display", "none");});',
        '// Removed "erimgdiv"',
    );
    html = sub(
        r'<FRAME SRC="menu.htm\?id=[0-9]+">',
        '<FRAME SRC="menu.htm">',
        html,
    )
    return html.encode('utf-8')

def fix_file(filepath):
    if not filepath.endswith('.htm') and not filepath.endswith('.html'):
        stderr.write('Skipping {filepath!r}\n'.format(**locals()))
        return
    with open(filepath, 'rb') as f:
        old_data = f.read()
    new_data = fix_html(old_data)
    if new_data == old_data:
        stderr.write('Nothing to fix in {filepath!r}\n'.format(**locals()))
        return
    stderr.write('Fixing {filepath!r}\n'.format(**locals()))
    with open(filepath, 'wb') as f:
        f.write(new_data)

def walk_filepaths(topdir):
    for dirpath, dirnames, filenames in walk(topdir):
        for filename in filenames:
            yield join(dirpath, filename)

def main():
    if len(argv) != 2:
        stderr.write('Usage: ./fix_topturnier TOPDIR\n')
        exit(1)
    topdir = argv[1]
    for filepath in walk_filepaths(topdir):
        fix_file(filepath)
    stderr.write('Done\n')

if __name__ == '__main__':
    main()
